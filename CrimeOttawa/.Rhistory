toText<-PlainTextDocument(toText)
toText<-removeWords(toText, stopwords("SMART"))
theText <- toText
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
theReturn<-theReturn[!grepl("^'",names(theReturn))]
theReturn<-gsub("'","",theReturn)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
theReturn<-theReturn[!grepl("^'",names(theReturn))]
names(theReturn)<-gsub("'","",names(theReturn))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
toText<-PlainTextDocument(toText)
toText<-removeWords(toText, stopwords("SMART"))
toText<-removeWords(toText, stopwords("french"))
theText <- toText
theReturn<-termFreq(theText)
theReturn<-theReturn[!grepl("^'",names(theReturn))]
names(theReturn)<-gsub("'","",names(theReturn))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
shiny::runApp('FedElect2015')
shiny::runApp('FedElect2015')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
sys.Date
sys.Date()
Sys.Date()
Sys.Time()
Sys.time()
?diff
diff("2015/11/03",Sys.Date())
diff(date("2015/11/03"),Sys.Date())
diff(as.Date("2015/11/03"),Sys.Date())
as.Date("2015/11/03")
difftime(as.Date("2015/11/03"),Sys.Date())
str(difftime(as.Date("2015/11/03"),Sys.Date()))
difftime(as.Date("2015/11/03"),Sys.Date())[1]
difftime(as.Date("2015/11/03"),Sys.Date())[[1]]
difftime(as.Date("2015/10/19"),Sys.Date())[[1]]
difftime(as.Date("2015/09/15"),Sys.Date())[[1]]
difftime(as.Date("2015/09/16"),Sys.Date())[[1]]
?as.char
?as.char
?aschar
?char
str(difftime(as.Date("2015/09/16"),Sys.Date())[[1]])
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd()
setwd("../")
load("FedFol20150916.RData")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?forceNetwork
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
Sys.Date()
?as.Date
?Sys.Date
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(sentWinner)
load("FedSentWin20151009.RData")
View(sentWinner)
load("FedSentWin20151005.RData")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
"2014/1/31" - "2014/1/1"
as.Date("2014/1/31") - as.Date("2014/1/1")
library(rgdal)
?readOGR
getwd()
load("Youville2016.RData")
View(PaymentTypeCD)
View(PaymentTypeCD)
table(theDonations$PaymentTypeCD)
View(PaymentTypeCD)
min(theDonations$PlotDate)
table(theDonations$PlotDate)
table(theDonations$PlotDate)
View(theDonations)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(theDon)
View(theDon)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(theDonations)
theDonations[theDonations$PostalCode=="" & theDonations$Country=="Canada",]
theDonations[theDonations$PostalCode=="" & theDonations$Country!="Canada",]
theDonations[theDonations$Country!="Canada",]
theDonations[theDonations$PostalCode=="" & theDonations$Country!="Canada",]$PlotDate
max(theDonations[theDonations$PostalCode=="" & theDonations$Country!="Canada",]$PlotDate)
max(theDonations[theDonations$PostalCode=="" & theDonations$Country!="Canada",]$DonationAmount)
sum(theDonations[theDonations$PostalCode=="" & theDonations$Country!="Canada",]$DonationAmount)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load("Youville2016.RData")
View(theDonations)
View(theDonations)
theDonations[theDonations$VoidReceipt==-1,]
theDonations[theDonations$VoidReceipt==-1,]$ACCPACAcct
table(theDonations[theDonations$VoidReceipt==-1,]$ACCPACAcct)
bub1<-theDonations[theDonations$VoidReceipt==-1,]$ACCPACAcct
bub1<-theDonations[theDonations$VoidReceipt==-1,]
shiny::runApp()
library(rgdal)
library(ggplot2)
setwd("../D4GO/BasecampDownload")
getwd()
setwd("../")
Dept<-read.csv("Dept.txt",sep="|")
Cities<-read.csv("Cities.txt",sep="|")
Contacts<-read.csv("Contacts.txt",sep="|")
ContactsToType<-read.csv("ContactsToType.txt",sep="|")
ContactTypeID<-read.csv("ContactTypeID.txt",sep="|")
ContactTypeMain<-read.csv("ContactTypeMain.txt",sep="|")
DepositItems<-read.csv("DepositItems.txt",sep="|")
Deposits<-read.csv("Deposits.txt",sep="|",quote="")
DonationReceipts<-read.csv("DonationReceipts.txt",sep="|",stringsAsFactors = FALSE)
PaymentTypeCD<-read.csv("PaymentTypeCD.txt",sep="|")
Provinces<-read.csv("Provinces.txt",sep="|")
ACCPAC<-read.csv("ACCPAC_Accounts.txt",sep="|")
theDonations<-DonationReceipts
theDonations$CFSAUID<-substring(theDonations$PostalCode,1,3)
theDonations$Country[grep(".*(USA).*",theDonations$Country)]<-"USA"
theDonations$Country[grep(".*(Australia).*",theDonations$Country)]<-"Australia"
theDonations$Country[grep("^$",theDonations$Country)]<-"Canada"
theDonations$PaymentTypeCD[grep("^$",theDonations$PaymentTypeCD)]<-"NotSpecified"
theDonations$PlotDate = strptime(theDonations$ReceiptDate, format="%Y-%m-%d")
theDonations$PlotDate$mday[1:nrow(theDonations)]<-1
bub<-merge.data.frame(Deposits,DepositItems,by = "DepositNum")
bub1<-merge.data.frame(bub,Contacts,by="ContactID")
bub2<-merge.data.frame(bub1,ACCPAC,by.x="AccountNum",by.y="AccountNumber")
View(bub2)
table(bub2$PostalCode)
table(bub2$PostalCode>0)
?
table
str(bub2)
bub2<-bub2[bub2$BadAddress=="False",]
table(bub2$PostalCode)
length(table(bub2$PostalCode))
length(unique(bub2$PostalCode))
View(ACCPAC)
str(bub2)
DonAccounts<-c(4009,4010,4011,4012,4013)
bub2<-bub[bub2$AccountNum %in% DonAccounts]
bub2<-bub[bub2$AccountNum %in% DonAccounts,]
View(bub2)
View(theDonations)
theDon<-merge.data.frame(Deposits,DepositItems,by = "DepositNum")
theDon<-merge.data.frame(theDon,Contacts,by="ContactID")
theDon<-merge.data.frame(theDon,ACCPAC,by.x="AccountNum",by.y="AccountNumber")
theDon<-theDon[theDon$BadAddress=="False",]
DonAccounts<-c(4009,4010,4011,4012,4013)
theDon<-theDon[theDon$AccountNum %in% DonAccounts,]
View(theDon)
table(theDon$PostalCode)
summary(theDon)
table(theDon$Amount)
theNeg<-theDon[theDon$Amount<0,]
theNeg
View(Deposits)
View(DepositItems)
table(theDon$AccountName)
load("Youville2016.RData")
getwd()
load("Youville2016.RData")
load("Youville2016.RData")
load("Youville2016.RData")
View(theDon)
View(theDon)
View(theDonations)
View(theDon)
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(theDon)
noPCAmt<-sum(theDon[theDon$PostalCode=="" & theDon$Country=="Canada",]$Amount)
noPCDate<-max(theDon[theDon$PostalCode=="" & theDon$Country=="Canada",]$PlotDate)
table(theDon$PostalCode)
donAll<-as.data.frame(theDon,stringsAsFactors=FALSE)
View(donAll)
table(donAll$PostalCode)
shiny::runApp()
shiny::runApp()
View(theDon)
bub<-theDon[theDon$CFSAUID=="K1N",]
View(bub)
bub<-bub[order(bub$Amount),]
View(bub)
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(theDon)
View(bub)
shiny::runApp()
bub<-theDon[theDon$CFSAUID=="K1S",]
bub<-bub[order(bub$Amount),]
View(bub)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(theDon)
table(theDon$ContactTypeMainID)
shiny::runApp()
shiny::runApp()
View(factpal)
View(donAll)
View(theDon)
shiny::runApp()
View(theDon)
shiny::runApp()
shiny::runApp()
View(theDon)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(curDonations)
shiny::runApp()
setwd("../D4GO/BasecampDownload")
Dept<-read.csv("Dept.txt",sep="|",stringsAsFactors = FALSE)
Cities<-read.csv("Cities.txt",sep="|",stringsAsFactors = FALSE)
Contacts<-read.csv("Contacts.txt",sep="|",stringsAsFactors = FALSE)
ContactsToType<-read.csv("ContactsToType.txt",sep="|",stringsAsFactors = FALSE)
ContactTypeID<-read.csv("ContactTypeID.txt",sep="|",stringsAsFactors = FALSE)
ContactTypeMain<-read.csv("ContactTypeMain.txt",sep="|",stringsAsFactors = FALSE)
DepositItems<-read.csv("DepositItems.txt",sep="|",stringsAsFactors = FALSE)
Deposits<-read.csv("Deposits.txt",sep="|",quote="",stringsAsFactors = FALSE)
DonationReceipts<-read.csv("DonationReceipts.txt",sep="|",stringsAsFactors = FALSE)
PaymentTypeCD<-read.csv("PaymentTypeCD.txt",sep="|",stringsAsFactors = FALSE)
setwd("../D4GO/BasecampDownload")
Dept<-read.csv("Dept.txt",sep="|",stringsAsFactors = FALSE)
Cities<-read.csv("Cities.txt",sep="|",stringsAsFactors = FALSE)
Contacts<-read.csv("Contacts.txt",sep="|",stringsAsFactors = FALSE)
ContactsToType<-read.csv("ContactsToType.txt",sep="|",stringsAsFactors = FALSE)
shiny::runApp()
runApp()
View(curDonations)
bub<-list()
bub[[2005]]<-2
bub
library(rgdal)
shapesList<-list()
shapeList[[1]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2005','CrimeWards_2005',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[2]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2006','CrimeWards_2006',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[3]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2007','CrimeWards_2007',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[4]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2008','CrimeWards_2008',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[5]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2009','CrimeWards_2009',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[6]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2010','CrimeWards_2010',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[7]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2011','CrimeWards_2011',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[8]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2012','CrimeWards_2012',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[9]] <- readOGR(dsn='./CrimeWards_SHP/CrimeWards_2013','CrimeWards_2013',verbose=FALSE,stringsAsFactors=FALSE)
getwd()
shapeList[[1]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2005',verbose=FALSE,stringsAsFactors=FALSE)
shapeList<-list()
shapeList[[1]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2005',verbose=FALSE,stringsAsFactors=FALSE)
shapeList<-list()
shapeList[[1]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2005',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[2]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2006',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[3]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2007',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[4]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2008',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[5]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2009',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[6]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2010',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[7]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2011',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[8]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2012',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[9]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2013',verbose=FALSE,stringsAsFactors=FALSE)
load("OttawaCrime.RData")
View(theCrime)
bub<-theCrime[,c("Ward_Number","ward_Name","population")]
View(bub)
str(theCrime)
shiny::runApp()
runApp()
runApp()
runApp()
str(shapeList[[1]])
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
View(theCrime)
table(theCrime$year)
runApp()
theCrime[theCrime$year==2013,1:8]
str(shapeList[[9]])
str(shapeList[[8]])
runApp()
str(shapeList[[9]])
runApp()
table(theCrime$year)
table(theCrime$Ward_Number)
str(theCrime$Ward_Number)
runApp()
paste0("Ward ","3")
table(shapeList[[9]]@data$WARD_NUM)
table(shapeList[[8]]@data$WARD_NUM)
shapeList<-list()
shapeList[[1]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2005',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[2]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2006',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[3]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2006',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[4]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2008',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[5]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2009',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[6]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2010',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[7]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2011',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[8]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2012',verbose=FALSE,stringsAsFactors=FALSE)
shapeList[[9]] <- readOGR(dsn='./CrimeWards_SHP','CrimeWards_2013',verbose=FALSE,stringsAsFactors=FALSE)
prj.LatLong <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")
for (x in 1:9){
shapeList[[x]] <- spTransform(shapeList[[x]], prj.LatLong)
}
table(shapeList[[8]]@data$WARD_NUM)
table(shapeList[[9]]@data$WARD_NUM)
shapeList[[9]]
shapeList[[9]]@data
shapeList[[8]]@data
runApp()
runApp()
shapeList[[9]]@data
prj.LatLong <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")
for (x in 1:9){
shapeList[[x]] <- spTransform(shapeList[[x]], prj.LatLong)
}
shapeList[[9]]@data
table(shapeList[[9]]@data$W_NUMBER)
bub<-shapeList[[(2013-2004)]]
bub@data$W_NUMBER
runApp()
shapeList[[9]]@data
theDF<-theCrime[theCrime$year == 2013,c("Ward_Number","ward_Name","population","total_num")]
View(theDF)
str(theDF)
shapeList[[8]]@data
wardPoly<-shapeList[[9]]
wardPoly@data$numAmt <- 0
for (ward in theDF$Ward_Number) {
wardString<-paste0("Ward ",ward)
str(wardString)
wardPoly@data$numAmt[wardPoly@data$W_NUMBER==wardString]<-theDF$theNum[theDF$Ward_Number==ward]
}
wardPoly
wardPoly@data
View(theDF)
wardPoly<-shapeList[[9]]
wardPoly@data$numAmt <- 0
names(theDF)[4]<-"theNum"
for (ward in theDF$Ward_Number) {
wardString<-paste0("Ward ",ward)
str(wardString)
wardPoly@data$numAmt[wardPoly@data$W_NUMBER==wardString]<-theDF$theNum[theDF$Ward_Number==ward]
}
wardPoly@data
wardPoly<-shapeList[[8]]
wardPoly@data$numAmt <- 0
names(theDF)[4]<-"theNum"
for (ward in theDF$Ward_Number) {
str(wardString)
wardPoly@data$numAmt[wardPoly@data$W_NUMBER==ward]<-theDF$theNum[theDF$Ward_Number==ward]
}
wardPoly@data
wardPoly<-shapeList[[8]]
wardPoly@data$numAmt <- 0
names(theDF)[4]<-"theNum"
for (ward in theDF$Ward_Number) {
wardPoly@data$numAmt[wardPoly@data$WARD_NUM==ward]<-theDF$theNum[theDF$Ward_Number==ward]
}
View(theDF)
wardPoly<-shapeList[[8]]
wardPoly@data$numAmt <- 0
names(theDF)[4]<-"theNum"
for (ward in theDF$Ward_Number) {
wardPoly@data$numAmt[wardPoly@data$WARD_NUM==ward]<-theDF$theNum[theDF$Ward_Number==ward]
}
wardPoly@data
wardPoly<-shapeList[[9]]
wardPoly@data$numAmt <- 0
names(theDF)[4]<-"theNum"
for (ward in theDF$Ward_Number) {
wardString<-paste0("Ward ",ward)
str(wardString)
wardPoly@data$numAmt[wardPoly@data$W_NUMBER==wardString]<-theDF$theNum[theDF$Ward_Number==ward]
}
wardPoly@data
?gsub
bub<-"Ward 1"
gsub("Ward ","",bub)
bub<-"Ward 12"
gsub("Ward ","",bub)
gsub("Ward ","",wardPoly@data$W_NUMBER)
runApp()
runApp()
runApp()
runApp()
