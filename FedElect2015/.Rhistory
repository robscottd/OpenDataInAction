shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
theSelected<-1
exHash<-TRUE
exTwit<-TRUE
theText<-""
if (theSelected==1) {
theText <- PlainTextDocument(toText)
}
else {
theText <- PlainTextDocument(fromText)
}
theText<-removeWords(theText, stopwords("SMART"))
theReturn<-termFreq(theText)
if (exHash==TRUE){
theReturn<-theReturn[!grepl("^#",names(theReturn))]
}
if (exTwit==TRUE){
theReturn<-theReturn[!grepl("^@",names(theReturn))]
}
head(theReturn)
head(theReturn[order(theReturn)])
head(theReturn[order(theReturn,decreasing=TRUE)])
head(theReturn[order(theReturn,decreasing=TRUE)],100)
shiny::runApp()
}
theSelected<-1
exHash<-TRUE
exTwit<-TRUE
theText<-""
if (theSelected==1) {
theText <- PlainTextDocument(toText)
}
else {
theText <- PlainTextDocument(fromText)
}
theText<-removeWords(theText, stopwords("SMART"))
theReturn<-termFreq(theText)
if (exHash==TRUE){
theReturn<-theReturn[!grepl("^#",names(theReturn))]
}
if (exTwit==TRUE){
theReturn<-theReturn[!grepl("^@",names(theReturn))]
}
theText
bub<-grep("the",theText)
bub<-theText[grep("the",theText)]
bub
head(theText)
bub<-theText[grep("the ",theText)]
head(theReturn[order(theReturn,decreasing=TRUE)],100)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
wordcloud(names(theReturn), theReturn, scale=c(4,0.4),
min.freq = 10, max.words=100,
colors=brewer.pal(8, "Dark2"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(theReturn[order(theReturn,decreasing=TRUE)],200)
shiny::runApp()
theReturn<-termFreq(theText)
theReturn<-termFreq(toText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
toText<-removeWords(toText, stopwords("SMART"))
theReturn<-termFreq(toText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
?removeWords
str(toText)
readLines
?readLines
toText = tm_map(toText, removeWords, stopwords("SMART"))
toText<-paste(toText,sep=" ")
toText = tm_map(toText, removeWords, stopwords("SMART"))
toText = tm_map(toText, PlainTextDocument)
theText <- PlainTextDocument(toText)
toText = tm_map(toText, removeWords, stopwords("SMART"))
toText<-theText
toText = tm_map(toText, removeWords, stopwords("SMART"))
theText <- PlainTextDocument(toText)
toText = tm_map(toText, removeWords, stopwords("SMART"))
theText<-removeWords(theText, stopwords("SMART"))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theText<-removeWords(theText, stopwords("english"))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
myCorpus1 = Corpus(VectorSource(theText))
myCorpus1 = tm_map(myCorpus1, removePunctuation)
myCorpus1 = tm_map(myCorpus1, removeNumbers)
myCorpus1 = tm_map(myCorpus1, content_transformer(tolower))
myCorpus1 = tm_map(myCorpus1, removeWords,
c(stopwords("SMART"), "the", "and", "but"))
theReturn<-termFreq(myCorpus1)
theReturn<-termFreq(PlainTetDocument(myCorpus1))
theReturn<-termFreq(PlainTextDocument(myCorpus1))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
myCorpus1 = Corpus(VectorSource(theText))
myCorpus1 = tm_map(myCorpus1, removeWords,
c(stopwords("SMART"), "the", "and", "but"))
theReturn<-termFreq(PlainTextDocument(myCorpus1))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
bub[1]<-"i the french fry"
bub<-"i the french fry"
bub[2]<-"in the event"
bub
theText <- PlainTextDocument(bub)
theText
theText<-removeWords(theText, stopwords("english"))
theText
theText <- PlainTextDocument(toText)
str(theText)
str(bub)
str(toText)
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
str(toText)
str(bub)
toText<-PlainTextDocument(toText)
str(toText)
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
theText<-PlainTextDocument(toText)
str(theText)
b1<-toText<-removeWords(theText$content, stopwords("SMART"))
b1<-removeWords(theText$content, stopwords("SMART"))
theReturn<-termFreq(b1)
str(theText$content)
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
theText <- PlainTextDocument(bub)
bub
str(theText)
theText<-removeWords(theText, stopwords("english"))
theText
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
toText<-PlainTextDocument(toText)
toText<-removeWords(toText, stopwords("english"))
toText
wordcloud(names(theReturn), theReturn, scale=c(4,0.4),
min.freq = 10, max.words=100,
colors=brewer.pal(8, "Dark2"))
theReturn<-termFreq(b1)
?tolower
bub[1]<-"The probLEm is"
bub[2]<-"This Will BE a problem"
tolower(bub)
bub[3]<-'this contains" and "'
bub
gsub("\"","",bub)
load("FedTweTo20150810.RData")
conTweets<-CTweetToDF
load("FedTweTo20150815.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150824.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150902.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150908.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150912.RData")
conTweets<-rbind(conTweets,CTweetToDF)
conTweets<-conTweets[conTweets$screen_name!="TedJHurley",]
conTweetsNoRT<-conTweets[!grepl("^RT",conTweets$text),]
setwd("../")
setwd("./ODOttawa")
getwd()
load("FedTweTo20150810.RData")
conTweets<-CTweetToDF
load("FedTweTo20150815.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150824.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150902.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150908.RData")
conTweets<-rbind(conTweets,CTweetToDF)
load("FedTweTo20150912.RData")
conTweets<-rbind(conTweets,CTweetToDF)
conTweets<-conTweets[conTweets$screen_name!="TedJHurley",]
conTweetsNoRT<-conTweets[!grepl("^RT",conTweets$text),]
data(crude)
str(crude)
str(crude[[1]])
myPreProc<- function(text) {
trim <- function(y) return(gsub("^ *|(?<= ) | *$", "", y, perl=T))
text<-trim(text)
text<-gsub("(?<=[.:?!]\\s)(\\w)","\\L\\1",text,perl=TRUE)
text<-gsub("^(\\w)","\\L\\1",text,perl=TRUE)
text<-gsub("&amp"," ",text)
#    text<-gsub(" amp "," ",text)
text<-gsub("(http)[^ ]*"," ",text)
text<-gsub("(www)[^ ]*"," ",text)
text<-gsub("\\w*\\.(com)"," ",text)
text<-gsub("[.,&/-]"," ",text)
text<-trim(text)
text <- gsub("[^A-z0-9 #@]","",text)
text <- gsub("\\[","",text)
#   text <- gsub("\\_","",text)
text<-gsub("\"","",text)
text <- gsub("\\]","",text)
text <- gsub("`","",text)
text <- gsub("\\^","",text)
text <- gsub("([\\])","",text)
text<-trim(text)
text<-tolower(text)
return(text)
}
fileConn<-file("FedTo20150912.txt")
cleanText<-myPreProc(unlist(conTweetsNoRT$text))
writeLines(cleanText, fileConn)
close(fileConn)
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
toText<-PlainTextDocument(toText)
toText<-removeWords(toText, stopwords("english"))
theText <- toText
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
stopwords("english")
stopwords("SMART")
toText<-removeWords(toText, stopwords("SMART"))
theText <- toText
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
myPreProc<- function(text) {
trim <- function(y) return(gsub("^ *|(?<= ) | *$", "", y, perl=T))
text<-trim(text)
text<-gsub("(?<=[.:?!]\\s)(\\w)","\\L\\1",text,perl=TRUE)
text<-gsub("^(\\w)","\\L\\1",text,perl=TRUE)
text<-gsub("&amp"," ",text)
#    text<-gsub(" amp "," ",text)
text<-gsub("(http)[^ ]*"," ",text)
text<-gsub("(www)[^ ]*"," ",text)
text<-gsub("\\w*\\.(com)"," ",text)
text<-gsub("[.,&/-]"," ",text)
text<-trim(text)
text <- gsub("[^A-z0-9 #@']","",text)
text <- gsub("\\[","",text)
#   text <- gsub("\\_","",text)
text<-gsub("\"","",text)
text <- gsub("\\]","",text)
text <- gsub("`","",text)
text <- gsub("\\^","",text)
text <- gsub("([\\])","",text)
text<-trim(text)
text<-tolower(text)
return(text)
}
fileConn<-file("FedTo20150912.txt")
cleanText<-myPreProc(unlist(conTweetsNoRT$text))
writeLines(cleanText, fileConn)
close(fileConn)
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
toText<-PlainTextDocument(toText)
toText<-removeWords(toText, stopwords("SMART"))
theText <- toText
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
theReturn<-theReturn[!grepl("^'",names(theReturn))]
theReturn<-gsub("'","",theReturn)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
head(theReturn[order(theReturn,decreasing=TRUE)],200)
theReturn<-termFreq(theText)
theReturn<-theReturn[!grepl("^'",names(theReturn))]
names(theReturn)<-gsub("'","",names(theReturn))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
fileConn<-file("FedTo20150912.txt")
toText<-readLines(fileConn)
close(fileConn)
toText<-PlainTextDocument(toText)
toText<-removeWords(toText, stopwords("SMART"))
toText<-removeWords(toText, stopwords("french"))
theText <- toText
theReturn<-termFreq(theText)
theReturn<-theReturn[!grepl("^'",names(theReturn))]
names(theReturn)<-gsub("'","",names(theReturn))
head(theReturn[order(theReturn,decreasing=TRUE)],200)
shiny::runApp('FedElect2015')
shiny::runApp('FedElect2015')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
sys.Date
sys.Date()
Sys.Date()
Sys.Time()
Sys.time()
?diff
diff("2015/11/03",Sys.Date())
diff(date("2015/11/03"),Sys.Date())
diff(as.Date("2015/11/03"),Sys.Date())
as.Date("2015/11/03")
difftime(as.Date("2015/11/03"),Sys.Date())
str(difftime(as.Date("2015/11/03"),Sys.Date()))
difftime(as.Date("2015/11/03"),Sys.Date())[1]
difftime(as.Date("2015/11/03"),Sys.Date())[[1]]
difftime(as.Date("2015/10/19"),Sys.Date())[[1]]
difftime(as.Date("2015/09/15"),Sys.Date())[[1]]
difftime(as.Date("2015/09/16"),Sys.Date())[[1]]
?as.char
?as.char
?aschar
?char
str(difftime(as.Date("2015/09/16"),Sys.Date())[[1]])
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd()
setwd("../")
load("FedFol20150916.RData")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?forceNetwork
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
Sys.Date()
?as.Date
?Sys.Date
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load("FedTotWin20151005.RData")
load("FedFolWin20151005.RData")
load("FedFolNet20151005.RData")
load("FedSentWin20151005.RData")
load("FedFolWin20151005.RData")
load("FedTotWin20151005.RData")
load("FedFolNet20151005.RData")
shiny::runApp()
View(tempJoin)
?readOGR
View(profCount)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(HDWinner)
View(conWinner)
View(fWinner)
shiny::runApp()
View(tempJoin)
shiny::runApp()
View(tempJoin)
shiny::runApp()
load("FedFol20151018.RData")
shiny::runApp()
View(tempJoin)
shiny::runApp()
pie
?pie
example(anscombe)
read.csv("http://bit.ly/1LC15Wk")
b1<-read.csv("http://bit.ly/1LC15Wk")
b1<-read.csv('http://bit.ly/1LC15Wk')
b1<-read.csv('https://drive.google.com/uc?export=download&id=0B9c0qEAtezB3eldrZVRBZkJ5LW8')
b1<-read.csv('http://drive.google.com/uc?export=download&id=0B9c0qEAtezB3eldrZVRBZkJ5LW8')
?curl
read.csv(curl("http://bit.ly/1LC15Wk"))
library(curl)
read.csv(curl("http://bit.ly/1LC15Wk"))
b1<-read.csv('http://drive.google.com/uc?export=download&id=0B9c0qEAtezB3eldrZVRBZkJ5LW8')
library(curl)
?url
?sum
?download.file
http://pastebin.com/raw.php?i=iy8kGPn9
read.csv("http://pastebin.com/raw.php?i=iy8kGPn9")
?barplot
shiny::runApp()
load("FedFolNet20151018.RData")
View(Nodes)
View(Links)
View(Links)
View(Nodes)
str(Links)
getRidingNodesAndLinks <- function(theSelected,theMin) {
theLinks<-tempLink[tempLink$riding==theSelected & tempLink$follower %in% Nodes$name[Nodes$size >= (theMin+1.718283)],]
theNodes<-Nodes[Nodes$name %in% unique(theLinks$name),]
theNodes<-rbind(theNodes,Nodes[Nodes$name %in% unique(theLinks$follower),])
row.names(theLinks)<-NULL
row.names(theNodes)<-NULL
theNodes$theRow<-0
for (i in 1:nrow(theNodes)) {
theNodes$theRow[i]<-i-1
}
theLinks<-merge(theLinks,theNodes)
theLinks$target<-theLinks$theRow
theLinks<-theLinks[,1:8]
theLinks<-merge(theLinks,theNodes,by.x="follower",by.y="name")
theLinks$source<-theLinks$theRow
theLinks<-theLinks[,6:8]
tempSize<-aggregate(source~target,data=theLinks,FUN="length")
for (i in 1:nrow(tempSize)) {
theNodes$size[i]<-tempSize$source[i]
}
returnNodesAndLists<-list(theNodes,theLinks)
return(returnNodesAndLists)
}
NodesLinks<-getRidingNodesAndLinks("Nepean",3.718283)
NodeLinks[[1]]
NodesLinks[[1]]
str(NodesLinks[[1]])
str(NodesLinks[[2]])
head(NodesLinks[[1]])
head(NodesLinks[[2]])
rownames(NodesLinks[[1]])
