{
    "collab_server" : "",
    "contents" : "Sys.setenv(TZ=\"America/Montreal\")\nlibrary(rgdal)\nlibrary(shinythemes)\nlibrary(leaflet)\nlibrary(networkD3)\nlibrary(tm)\nlibrary(wordcloud)\n\n\nload(\"FedTotWin20151018.RData\")\nload(\"FedFolNet20151018.RData\")\nload(\"FedFolWin20151018.RData\")\nload(\"FedSentWin20151018.RData\")\n\nfileConn<-file(\"FedTo20151018.txt\")\ntoText<-readLines(fileConn)\nclose(fileConn)\ntoText<-PlainTextDocument(toText)\ntoText<-removeWords(toText, stopwords(\"SMART\"))\ntoText<-removeWords(toText, stopwords(\"french\"))\n\n\nfileConn<-file(\"FedFrom20151018.txt\")\nfromText<-readLines(fileConn)\nclose(fileConn)\nfromText<-PlainTextDocument(fromText)\nfromText<-removeWords(fromText, stopwords(\"SMART\"))\nfromText<-removeWords(fromText, stopwords(\"french\"))\n\nfWinner$riding[fWinner$riding==\"Ottawa-Orleans\"]<-\"Orleans\"\nfWinner<-fWinner[order(fWinner$riding,decreasing=TRUE),]\nHDWinner$riding[HDWinner$riding==\"Ottawa-Orleans\"]<-\"Orleans\"\nHDWinner<-HDWinner[order(HDWinner$riding,decreasing=TRUE),]\nconWinner$riding[conWinner$riding==\"Ottawa-Orleans\"]<-\"Orleans\"\nconWinner<-conWinner[order(conWinner$riding,decreasing=TRUE),]\nsentWinner$riding[sentWinner$riding==\"Ottawa-Orleans\"]<-\"Orleans\"\nsentWinner<-sentWinner[order(sentWinner$riding,decreasing=TRUE),]\n\nridings <- readOGR(dsn='./ottawaRidings','ottawaRidings',verbose=FALSE,stringsAsFactors=FALSE)\nridings@data$fWin <- \" \"\nridings@data$HDWin <- \" \"\nridings@data$conWin <- \" \"\nridings@data$sentWin <- \" \"\nridings@data$Con <- \" \"\nridings@data$Lib <- \" \"\nridings@data$NDP <- \" \"\n\nridings@data$ENNAME[ridings@data$FEDNUM==35076]<-\"Orleans\"\n\n\n#mapRiding<-data.frame(polyRiding=ridings@data$ENNAME,twitRiding=c(\"Nepean\",\"Ottawa-Vanier\",\"Ottawa West-Nepean\",\"Ottawa-Orleans\",\"Ottawa South\",\"Carleton\",\"Ottawa Centre\",\"Kanata-Carleton\"),stringsAsFactors=FALSE)\n\n\nfor (FN in joinFEDNUM$FEDNUM) {\n    ridings@data$Con[ridings@data$FEDNUM==FN]<-tempJoin$Candidate[tempJoin$Party==\"Con\" & \n                                                                      tempJoin$Riding==joinFEDNUM$riding[joinFEDNUM$FEDNUM==FN]]\n    ridings@data$Lib[ridings@data$FEDNUM==FN]<-tempJoin$Candidate[tempJoin$Party==\"Lib\" & \n                                                                      tempJoin$Riding==joinFEDNUM$riding[joinFEDNUM$FEDNUM==FN]]\n    ridings@data$NDP[ridings@data$FEDNUM==FN]<-tempJoin$Candidate[tempJoin$Party==\"NDP\" & \n                                                                      tempJoin$Riding==joinFEDNUM$riding[joinFEDNUM$FEDNUM==FN]]\n}\n\nfor (FN in fWinner$FEDNUM) {\n    ridings@data$fWin[ridings@data$FEDNUM==FN]<-fWinner$party[fWinner$FEDNUM==FN]\n}\nridings@data$fWin <- factor(ridings@data$fWin)\n\nfor (FN in HDWinner$FEDNUM) {\n    ridings@data$HDWin[ridings@data$FEDNUM==FN]<-HDWinner$party[HDWinner$FEDNUM==FN]\n}\nridings@data$HDWin <- factor(ridings@data$HDWin)\n\nfor (FN in conWinner$FEDNUM) {\n    ridings@data$conWin[ridings@data$FEDNUM==FN]<-conWinner$party[conWinner$FEDNUM==FN]\n}\nridings@data$conWin <- factor(ridings@data$conWin)\n\nfor (FN in sentWinner$FEDNUM) {\n    ridings@data$sentWin[ridings@data$FEDNUM==FN]<-sentWinner$party[sentWinner$FEDNUM==FN]\n}\nridings@data$sentWin <- factor(ridings@data$sentWin,levels=c(\"Con\",\"Lib\",\"NDP\",\"TIE\"))\n\n\nfactpal <- colorFactor(c(\"royalblue1\",\"red\",\"orange\",\"grey\"), factor(c(\"Con\",\"Lib\",\"NDP\",\"TIE\")))\n#b2<-paste(b1[1],b1[2],b1[3],sep=\"\\n\")\n\ngetWinMethod <- function(choice) {\n   if (choice == 1) {\n        return(ridings@data$fWin)\n    }\n    else if (choice ==2) {\n        return(ridings@data$conWin)\n    }\n    else if (choice ==3) {\n        return(ridings@data$HDWin)    \n    }\n    \n    else {\n        return(ridings@data$sentWin)\n    }\n}\n\nWin<-getWinMethod(1)\n\ngetRidingNodesAndLinks <- function(theSelected,theMin) {\n   theLinks<-tempLink[tempLink$riding==theSelected & tempLink$follower %in% Nodes$name[Nodes$size >= (theMin+1.718283)],]\n   theNodes<-Nodes[Nodes$name %in% unique(theLinks$name),]\n   theNodes<-rbind(theNodes,Nodes[Nodes$name %in% unique(theLinks$follower),])\n\n   row.names(theLinks)<-NULL\n   row.names(theNodes)<-NULL\n   theNodes$theRow<-0\n   for (i in 1:nrow(theNodes)) {\n       theNodes$theRow[i]<-i-1\n   }\n   theLinks<-merge(theLinks,theNodes)\n   theLinks$target<-theLinks$theRow\n   theLinks<-theLinks[,1:8]\n   theLinks<-merge(theLinks,theNodes,by.x=\"follower\",by.y=\"name\")\n   theLinks$source<-theLinks$theRow\n   theLinks<-theLinks[,6:8]\n\n   tempSize<-aggregate(source~target,data=theLinks,FUN=\"length\")\n\n   for (i in 1:nrow(tempSize)) {\n       theNodes$size[i]<-tempSize$source[i]\n   }\n   returnNodesAndLists<-list(theNodes,theLinks)\n   return(returnNodesAndLists)\n}\n\n\nNodesLinks<-getRidingNodesAndLinks(\"Nepean\",3.718283)\n\ngetText <- function(theSelected,exHash,exTwit,minF,maxW) {\n    theText<-\"\"\n    if (theSelected==1) {\n        theText <- toText\n    }\n    else {\n        theText <- fromText        \n    }\n    \n    theReturn<-termFreq(theText)\n    theReturn<-theReturn[!grepl(\"^'\",names(theReturn))]\n    names(theReturn)<-gsub(\"'\",\"\",names(theReturn))\n    if (exHash==TRUE){\n        theReturn<-theReturn[!grepl(\"^#\",names(theReturn))]        \n    }\n    if (exTwit==TRUE){\n        theReturn<-theReturn[!grepl(\"^@\",names(theReturn))]        \n    }\n    return(theReturn)\n}\nterms<-getText(1,FALSE,TRUE,20,100)",
    "created" : 1440684760064.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1341043814",
    "id" : "80844F1B",
    "lastKnownWriteTime" : 1445260878,
    "last_content_update" : 0,
    "path" : "~/Documents/ODOttawa/FedElect2015/global.R",
    "project_path" : "global.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}